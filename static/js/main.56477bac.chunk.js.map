{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","timerId","state","currentTime","Date","this","setInterval","setState","console","log","toLocaleTimeString","prevProps","name","clockName","props","clearInterval","React","Component","App","isVisible","visible","hidden","random","uuid","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"sNAUaA,EAAb,4MACEC,aADF,IAGEC,MAAe,CACbC,YAAa,IAAIC,MAJrB,uDAOE,WAAqB,IAAD,OAClBC,KAAKJ,QAAUK,aAAY,WACzB,EAAKC,SAAS,CAAEJ,YAAa,IAAIC,OAEjCI,QAAQC,IAAI,EAAKP,MAAMC,YAAYO,wBAClC,OAZP,gCAeE,SAAmBC,GACjB,IAAMC,EAAOD,EAAUE,UAEnBD,IAASP,KAAKS,MAAMD,WAEtBL,QAAQC,IAAR,qCAA0CG,EAA1C,eAAqDP,KAAKS,MAAMD,cApBtE,kCAwBE,WACMR,KAAKJ,SACPc,cAAcV,KAAKJ,WA1BzB,oBA8BE,WACE,IAAQE,EAAgBE,KAAKH,MAArBC,YAER,OACE,mCACGA,EAAYO,2BAnCrB,GAA2BM,IAAMC,WCE3BC,G,kNACJhB,MAAe,CACbiB,WAAW,EACXN,UAAW,G,EAGbO,QAAU,WACR,EAAKb,SAAS,CAAEY,WAAW,K,EAG7BE,OAAS,WACP,EAAKd,SAAS,CAAEY,WAAW,K,EAG7BG,OAAS,WACP,EAAKf,SAAS,CAAEM,UAAWU,iB,4CAG7B,WACE,OACE,sBAAKC,UAAU,MAAf,UACE,oBAAIA,UAAU,eAAd,yBACA,wBACEA,UAAU,gBACVC,KAAK,SACLC,QAASrB,KAAKgB,OAHhB,kBAOA,wBACEG,UAAU,gBACVC,KAAK,SACLC,QAASrB,KAAKe,QAHhB,qBAOA,wBACEI,UAAU,gBACVC,KAAK,SACLC,QAASrB,KAAKiB,OAHhB,yBAOA,qBAAIE,UAAU,cAAd,sBAG6B,IAAzBnB,KAAKH,MAAMiB,UACN,cAAC,EAAD,CAAON,UAAWR,KAAKH,MAAMW,YAC7B,e,GAhDCG,IAAMC,YAkHTC,IC3HfS,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.56477bac.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  clockName: number | string\n};\n\ninterface State {\n  currentTime: Date,\n}\n\nexport class Clock extends React.Component<Props, State> {\n  timerId?: NodeJS.Timeout;\n\n  state: State = {\n    currentTime: new Date(),\n  };\n\n  componentDidMount() {\n    this.timerId = setInterval(() => {\n      this.setState({ currentTime: new Date() });\n      // eslint-disable-next-line\n      console.log(this.state.currentTime.toLocaleTimeString());\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const name = prevProps.clockName;\n\n    if (name !== this.props.clockName) {\n      // eslint-disable-next-line no-console\n      console.log(`The Clock was renamed from ${name} to ${this.props.clockName}`);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.timerId) {\n      clearInterval(this.timerId);\n    }\n  }\n\n  render() {\n    const { currentTime } = this.state;\n\n    return (\n      <>\n        {currentTime.toLocaleTimeString()}\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport { v4 as uuid } from 'uuid';\nimport { Clock } from './components/Clock';\nimport './App.scss';\n\ntype Props = {};\n\ninterface State {\n  isVisible: boolean;\n  clockName: number | string;\n}\n\nclass App extends React.Component<Props, State> {\n  state: State = {\n    isVisible: true,\n    clockName: 0,\n  };\n\n  visible = () => {\n    this.setState({ isVisible: true });\n  };\n\n  hidden = () => {\n    this.setState({ isVisible: false });\n  };\n\n  random = () => {\n    this.setState({ clockName: uuid() });\n  };\n\n  render() {\n    return (\n      <div className=\"app\">\n        <h1 className=\"clock__title\">React Clock</h1>\n        <button\n          className=\"clock__button\"\n          type=\"button\"\n          onClick={this.hidden}\n        >\n          Hide\n        </button>\n        <button\n          className=\"clock__button\"\n          type=\"button\"\n          onClick={this.visible}\n        >\n          Visible\n        </button>\n        <button\n          className=\"clock__button\"\n          type=\"button\"\n          onClick={this.random}\n        >\n          Change Name\n        </button>\n        <h2 className=\"clock__show\">\n          Time is:\n          {\n            this.state.isVisible === true\n              ? (<Clock clockName={this.state.clockName} />)\n              : (null)\n          }\n        </h2>\n      </div>\n    );\n  }\n}\n\n//\n//\n// class App extends React.Component<Props, State> {\n//   state: State = {\n//     isVisible: true,\n//     clockName: 0,\n//   };\n//\n//   visible = () => {\n//     this.setState({ isVisible: true });\n//   };\n//\n//   hidden = () => {\n//     this.setState({ isVisible: false });\n//   };\n//\n//   random = () => {\n//     this.setState({ clockName: Math.floor(Math.random() * (100 - 1)) + 1 });\n//   };\n//\n//   render() {\n//     return (\n//       <div className=\"App\">\n//         <h1>React Clock</h1>\n//         <button\n//           type=\"button\"\n//           className=\"button\"\n//           onClick={this.visible}\n//         >\n//           Visible\n//         </button>\n//         <button\n//           type=\"button\"\n//           className=\"button\"\n//           onClick={this.hidden}\n//         >\n//           Invisible\n//         </button>\n//         <button\n//           type=\"button\"\n//           className=\"button\"\n//           onClick={this.random}\n//         >\n//           Random Name\n//         </button>\n//         <h2>\n//           Time is:\n//           {\n//             this.state.isVisible === true\n//               ? (<Clock clockName={this.state.clockName} />)\n//               : (null)\n//           }\n//         </h2>\n//       </div>\n//     );\n//   }\n// }\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}